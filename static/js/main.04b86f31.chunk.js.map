{"version":3,"sources":["components/App/App.styled.jsx","components/FeedBack/FeedBack.styled.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedBack/FeedBack.jsx","components/App/App.jsx","index.js"],"names":["WrapperFeedBack","styled","div","TitleFeedBack","h2","TitleStatistic","ContainerButtons","Button","button","FeedbackOptions","options","onLeaveFeedBack","map","option","nameBtn","replace","toUpperCase","type","onClick","NameStatic","p","ValueStatistic","span","Statistics","good","neutral","bad","total","positivePercentage","FeedBack","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","props","title","titleStatistic","titleNoStatistic","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEaA,EAAkBC,IAAOC,IAAV,yG,qCCAfC,EAAgBF,IAAOG,GAAV,yEAKbC,EAAiBJ,IAAOG,GAAV,4GAOdE,EAAmBL,IAAOC,IAAV,sECZhBK,EAASN,IAAOO,OAAV,yL,OCGNC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OAAOD,EAAQE,KAAI,SAACC,GAClB,IAAMC,EAAUD,EAAOE,QAAQF,EAAO,GAAIA,EAAO,GAAGG,eACpD,OACE,cAACT,EAAD,CAEEU,KAAK,SACLC,QAAS,kBAAMP,EAAgBE,IAHjC,SAKGC,GAJID,OCDAM,EAAalB,IAAOmB,EAAV,4FAMVC,EAAiBpB,IAAOqB,KAAV,qECZdC,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,gCACE,eAACT,EAAD,mBAEE,cAACE,EAAD,UAAiBG,OAEnB,eAACL,EAAD,sBAEE,cAACE,EAAD,UAAiBI,OAEnB,eAACN,EAAD,kBAEE,cAACE,EAAD,UAAiBK,OAEnB,eAACP,EAAD,oBAEE,cAACE,EAAD,UAAiBM,OAEnB,eAACR,EAAD,gCAEE,eAACE,EAAD,WAAiBO,EAAjB,cCpBKC,EAAb,4MACEC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEf,gBAAkB,SAACE,GACjB,EAAKkB,UAAS,SAACC,GACb,OAAO,eAAGnB,EAASmB,EAAUnB,GAAU,MAEzC,EAAKoB,qBACL,EAAKC,mCAZT,EAeED,mBAAqB,WACnB,EAAKF,UAAS,SAACC,GACb,MAAO,CACLL,MAAOK,EAAUR,KAAOQ,EAAUP,QAAUO,EAAUN,SAlB9D,EAuBEQ,gCAAkC,WAChC,EAAKH,UAAS,SAACC,GACb,MAAO,CACLJ,mBAAoBO,KAAKC,MACtBJ,EAAUR,KAAOQ,EAAUL,MAAS,UA3B/C,4CAiCE,WACE,OACE,qCACE,cAACxB,EAAD,UAAgBkC,KAAKC,MAAMC,QAC3B,cAACjC,EAAD,UACE,cAAC,EAAD,CACEI,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB0B,KAAK1B,oBAG1B,cAACN,EAAD,UAAiBgC,KAAKC,MAAME,iBAC3BH,KAAKP,MAAMH,MACV,cAAC,EAAD,CACEH,KAAMa,KAAKP,MAAMN,KACjBC,QAASY,KAAKP,MAAML,QACpBC,IAAKW,KAAKP,MAAMJ,IAChBC,MAAOU,KAAKP,MAAMH,MAClBC,mBAAoBS,KAAKP,MAAMF,qBAGjC,cAACzB,EAAD,UAAgBkC,KAAKC,MAAMG,mBAlB/B,WAnCN,GAA8BC,aCPjBC,EAAM,WACjB,OACE,cAAC3C,EAAD,UACE,cAAC,EAAD,CACEuC,MAAM,wBACNC,eAAe,aACfC,iBAAiB,yBCJzBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.04b86f31.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const WrapperFeedBack = styled.div`\n  background-color: #00ffff;\n  min-height: 200px;\n  padding-bottom: 20px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const TitleFeedBack = styled.h2`\n  text-align: center;\n  line-height: 60px;\n`;\n\nexport const TitleStatistic = styled.h2`\n  text-align: center;\n  margin-top: 50px;\n  color: blue;\n  font-size: 36px;\n`;\n\nexport const ContainerButtons = styled.div`\n  margin: 0 auto;\n  width: fit-content;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  margin: 0 10px;\n  padding: 5px;\n  background-color: #e9a6e7;\n  border-radius: 5px;\n  cursor: pointer;\n  :hover {\n    background-color: yellow;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Button } from \"./FeedbackOptions.styled\";\n\nexport const FeedbackOptions = ({ options, onLeaveFeedBack }) => {\n  return options.map((option) => {\n    const nameBtn = option.replace(option[0], option[0].toUpperCase());\n    return (\n      <Button\n        key={option}\n        type=\"button\"\n        onClick={() => onLeaveFeedBack(option)}\n      >\n        {nameBtn}\n      </Button>\n    );\n  });\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedBack: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\n// export const TitleStatistic = styled.h2`\n//   text-align: center;\n//   margin-top: 50px;\n//   color: blue;\n//   font-size: 36px;\n// `;\n\nexport const NameStatic = styled.p`\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n`;\n\nexport const ValueStatistic = styled.span`\n  color: #b15e5e;\n  margin-left: 20px;\n`;\n","import PropTypes from \"prop-types\";\nimport { NameStatic, ValueStatistic } from \"./Statistics.styled\";\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <div>\n      <NameStatic>\n        Good:\n        <ValueStatistic>{good}</ValueStatistic>\n      </NameStatic>\n      <NameStatic>\n        Neutral:\n        <ValueStatistic>{neutral}</ValueStatistic>\n      </NameStatic>\n      <NameStatic>\n        Bad:\n        <ValueStatistic>{bad}</ValueStatistic>\n      </NameStatic>\n      <NameStatic>\n        Total:\n        <ValueStatistic>{total}</ValueStatistic>\n      </NameStatic>\n      <NameStatic>\n        Positive feedback:\n        <ValueStatistic>{positivePercentage}%</ValueStatistic>\n      </NameStatic>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","// import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport {\n  TitleFeedBack,\n  TitleStatistic,\n  ContainerButtons,\n} from \"./FeedBack.styled\";\nimport { FeedbackOptions } from \"components/FeedbackOptions/FeedbackOptions\";\nimport { Statistics } from \"components/Statistics/Statistics\";\n\nexport class FeedBack extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedBack = (option) => {\n    this.setState((prevState) => {\n      return { [option]: prevState[option] + 1 };\n    });\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  countTotalFeedback = () => {\n    this.setState((prevState) => {\n      return {\n        total: prevState.good + prevState.neutral + prevState.bad,\n      };\n    });\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState((prevState) => {\n      return {\n        positivePercentage: Math.round(\n          (prevState.good / prevState.total) * 100\n        ),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <TitleFeedBack>{this.props.title}</TitleFeedBack>\n        <ContainerButtons>\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedBack={this.onLeaveFeedBack}\n          />\n        </ContainerButtons>\n        <TitleStatistic>{this.props.titleStatistic}</TitleStatistic>\n        {this.state.total ? (\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.state.total}\n            positivePercentage={this.state.positivePercentage}\n          />\n        ) : (\n          <TitleFeedBack>{this.props.titleNoStatistic}</TitleFeedBack>\n        )}\n        )\n      </>\n    );\n  }\n}\n","import { WrapperFeedBack } from \"./App.styled\";\nimport { FeedBack } from \"components/FeedBack/FeedBack\";\n\nexport const App = () => {\n  return (\n    <WrapperFeedBack>\n      <FeedBack\n        title=\"Please leave feedback\"\n        titleStatistic=\"Statistics\"\n        titleNoStatistic=\"No feedback given\"\n      />\n    </WrapperFeedBack>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}